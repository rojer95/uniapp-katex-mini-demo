{"version":3,"file":"katex.js","sources":["common/wtto-markdown/js_sdk/katex.js"],"sourcesContent":["import parse from \"@rojer/katex-mini\";\r\n\r\n/**\r\n * @typedef {import('markdown-it/index')} MarkdownIt\r\n * @typedef {import('markdown-it/index').StateInline} StateInline\r\n * @typedef {import('katex').KatexOptions} KatexOptions\r\n */\r\n\r\nconst delimiters = [\r\n  {\r\n    left: \"\\\\[\",\r\n    right: \"\\\\]\",\r\n    display: true,\r\n  },\r\n  {\r\n    left: \"\\\\(\",\r\n    right: \"\\\\)\",\r\n    display: false,\r\n  },\r\n  {\r\n    left: \"$$\",\r\n    right: \"$$\",\r\n    display: false,\r\n  },\r\n];\r\n\r\n/**\r\n * @param {KatexOptions} [options]\r\n */\r\nfunction katexEscapedRule(options) {\r\n  return (state, silent) => {\r\n    const max = state.posMax;\r\n    const start = state.pos;\r\n\r\n    for (const { left, right, display } of delimiters) {\r\n      // 检查是否以左标记开始\r\n      if (!state.src.slice(start).startsWith(left)) continue;\r\n\r\n      // 跳过左标记的长度\r\n      let pos = start + left.length;\r\n\r\n      // 寻找匹配的右标记\r\n      while (pos < max) {\r\n        if (state.src.slice(pos).startsWith(right)) {\r\n          break;\r\n        }\r\n        pos++;\r\n      }\r\n\r\n      // 没找到匹配的右标记，跳过，进入下个匹配\r\n      if (pos >= max) continue;\r\n\r\n      if (!silent) {\r\n        const content = state.src.slice(start + left.length, pos);\r\n        const token = state.push(\"katex\", \"\", 0);\r\n        try {\r\n          token.content = JSON.stringify(parse(content, options));\r\n        } catch (error) {\r\n          token.content = \"[]\";\r\n        }\r\n        token.block = display;\r\n      }\r\n\r\n      // 更新位置，跳过右标记的长度\r\n      state.pos = pos + right.length;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n/**\r\n * @param {MarkdownIt} md\r\n * @param {KatexOptions} [options]\r\n */\r\nexport function katexPlugin(md, options) {\r\n  md.inline.ruler.after(\"text\", \"katex_escaped\", katexEscapedRule(options));\r\n}\r\n"],"names":["parse"],"mappings":";;AAQA,MAAM,aAAa;AAAA,EACjB;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,EACV;AAAA,EACD;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,EACV;AAAA,EACD;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,EACV;AACH;AAKA,SAAS,iBAAiB,SAAS;AACjC,SAAO,CAAC,OAAO,WAAW;AACxB,UAAM,MAAM,MAAM;AAClB,UAAM,QAAQ,MAAM;AAEpB,eAAW,EAAE,MAAM,OAAO,QAAO,KAAM,YAAY;AAEjD,UAAI,CAAC,MAAM,IAAI,MAAM,KAAK,EAAE,WAAW,IAAI;AAAG;AAG9C,UAAI,MAAM,QAAQ,KAAK;AAGvB,aAAO,MAAM,KAAK;AAChB,YAAI,MAAM,IAAI,MAAM,GAAG,EAAE,WAAW,KAAK,GAAG;AAC1C;AAAA,QACD;AACD;AAAA,MACD;AAGD,UAAI,OAAO;AAAK;AAEhB,UAAI,CAAC,QAAQ;AACX,cAAM,UAAU,MAAM,IAAI,MAAM,QAAQ,KAAK,QAAQ,GAAG;AACxD,cAAM,QAAQ,MAAM,KAAK,SAAS,IAAI,CAAC;AACvC,YAAI;AACF,gBAAM,UAAU,KAAK,UAAUA,cAAAA,MAAM,SAAS,OAAO,CAAC;AAAA,QACvD,SAAQ,OAAO;AACd,gBAAM,UAAU;AAAA,QACjB;AACD,cAAM,QAAQ;AAAA,MACf;AAGD,YAAM,MAAM,MAAM,MAAM;AACxB,aAAO;AAAA,IACR;AACD,WAAO;AAAA,EACX;AACA;AAMO,SAAS,YAAY,IAAI,SAAS;AACvC,KAAG,OAAO,MAAM,MAAM,QAAQ,iBAAiB,iBAAiB,OAAO,CAAC;AAC1E;;"}