{"version":3,"file":"index.js","sources":["common/wtto-markdown/js_sdk/index.js"],"sourcesContent":["import MD from \"markdown-it\";\r\n\r\n/**\r\n * @typedef {import('markdown-it/index').Token} Token\r\n * @typedef {import('markdown-it/index').Options} Options\r\n * @typedef {import('@uni-helper/uni-types').RichTextNode} RichTextNode\r\n * @typedef {import('@uni-helper/uni-types').RichTextNodeNode} RichTextNodeNode\r\n */\r\n\r\nexport const MarkdownIt = MD;\r\n\r\n/**\r\n * @param {Token} token\r\n * @returns  {Record<string, string | number>}\r\n */\r\nfunction getNodeAttr(token) {\r\n  const attrs = {};\r\n  for (const attr of token.attrs || []) {\r\n    const [key, value] = attr;\r\n    attrs[key] = value;\r\n  }\r\n  if (token.type === \"softbreak\") return attrs;\r\n  attrs.class = `md_${token.tag}`;\r\n  if (token.type === \"container_warning_open\") attrs.class += ` md_container_${token.info.trim()}`;\r\n  return attrs;\r\n}\r\n\r\n/**\r\n * @param {Token[]} tokens\r\n * @param {Options} [options]\r\n * @returns {RichTextNode[]}\r\n */\r\nexport function parseTokens(tokens, options) {\r\n  const res = [];\r\n  /** @type {Record<number, boolean>} */\r\n  let nesting = 0;\r\n  for (const token of tokens) {\r\n    if (token.hidden) continue;\r\n    let target = res;\r\n    for (let i = 0; i < nesting; i++) {\r\n      target = target[target.length - 1]?.children ?? [];\r\n    }\r\n    nesting += token.nesting;\r\n    if (token.tag) {\r\n      if (token.nesting > 0) {\r\n        target.push({\r\n          name: token.tag,\r\n          attrs: getNodeAttr(token),\r\n          children: [],\r\n        });\r\n        continue;\r\n      }\r\n      if (token.nesting === 0) {\r\n        if (token.type === \"softbreak\" && !options?.breaks) {\r\n          target.push({ type: \"text\", text: \" \" });\r\n          continue;\r\n        }\r\n        if (token.type === \"highlight\") {\r\n          try {\r\n            target.push(JSON.parse(token.content));\r\n          } catch (error) {}\r\n          continue;\r\n        }\r\n        /** @type {RichTextNodeNode} */\r\n        const node = {\r\n          name: token.tag,\r\n          attrs: getNodeAttr(token),\r\n          children: token.content ? [{ type: \"text\", text: token.content }] : [],\r\n        };\r\n        if (token.tag === \"code\" && token.block) {\r\n          target.push({\r\n            name: \"pre\",\r\n            attrs: { ...token.attrs, class: \"md_pre\" },\r\n            children: [node],\r\n          });\r\n          continue;\r\n        }\r\n        target.push(node);\r\n      }\r\n      continue;\r\n    }\r\n    if (token.type === \"inline\") {\r\n      if (token.children) {\r\n        target.push(...parseTokens(token.children));\r\n      }\r\n      continue;\r\n    }\r\n    // emoji\r\n    if (token.type === \"text\" || token.type === \"emoji\") {\r\n      if (token.content) target.push({ type: \"text\", text: token.content });\r\n      continue;\r\n    }\r\n    // katex\r\n    if (token.type === \"katex\") {\r\n      try {\r\n        const nodes = JSON.parse(token.content);\r\n        target.push(...nodes);\r\n      } catch (error) {}\r\n    }\r\n    // footnote\r\n    if (token.type === \"footnote_ref\") {\r\n      const text = `${token.meta.id + 1}${token.meta.subId ? `:${token.meta.subId}` : \"\"}`;\r\n      target.push({\r\n        name: \"sup\",\r\n        attrs: { class: \"md_sup\" },\r\n        children: [\r\n          {\r\n            name: \"a\",\r\n            attrs: { class: \"md_a\", href: `#fn${token.meta.id + 1}`, id: `fnref${text}` },\r\n            children: [{ type: \"text\", text: `[${text}]` }],\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    if (token.type === \"footnote_block_open\") {\r\n      target.push({ name: \"hr\", attrs: { class: \"md_hr\" } });\r\n      target.push({ name: \"ol\", attrs: { class: \"md_ol\" }, children: [] });\r\n      continue;\r\n    }\r\n    if (token.type === \"footnote_open\") {\r\n      target.push({ name: \"li\", attrs: { class: \"md_li\", id: `fn${token.meta.id + 1}` }, children: [] });\r\n      continue;\r\n    }\r\n    if (token.type === \"footnote_anchor\") {\r\n      const text = `${token.meta.id + 1}${token.meta.subId ? `:${token.meta.subId}` : \"\"}`;\r\n      target.push({\r\n        name: \"a\",\r\n        attrs: { class: \"md_a\", href: `#fnref${text}` },\r\n        children: [{ type: \"text\", text: \"↩︎\" }],\r\n      });\r\n    }\r\n  }\r\n  return res;\r\n}\r\n"],"names":["MD"],"mappings":"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"}